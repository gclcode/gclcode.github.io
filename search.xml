<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[在VMware中CentOS-7设置静态IP]]></title>
    <url>%2F2019%2F08%2F04%2F%E5%9C%A8VMware%E4%B8%ADCentOS-7%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81IP%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这篇主要介绍如何设置VMware虚拟机中的CentOS-7的静态IP。写这篇的原因是在学习Hadoop的时候配置虚拟Linux遇到了网络配置问题，希望我写的这篇博客能够帮助大家解决问题。 VMware和CentOS-7的安装 VMware和CentOS-7的安装不是我们的重点，所以我们就跳过。如果不会的童鞋可以按照下面的网页链接进行安装。 VMware15（32/64）位下载地址： 1https://pan.baidu.com/s/1bTFt1hhPHIZ5YFbatN95bw 提取码: t4v3 VMware15（32/64）位安装教程： 1https://mp.weixin.qq.com/s/28fb8SQgUz2lcHSCCk_UBg CentOS 7/64位下载地址： 1pan.baidu.com/s/1HLbQrE5M2UW1S7KFBuFLZQ 提取码: 24d4 CentOS 7/64位安装教程： 1https://mp.weixin.qq.com/s/0X1fq8xJjBQ5eKU8gQllWw 关闭VMware的DHCP设置 打开VMware依次打开编辑-&gt;虚拟机网络配置。 选择VMnet8，取消勾选”使用本地DHCP服务将IP地址分配给虚拟机”选项。 点击”NAT设置”查看一下GATEWAY地址。 虚拟机裸机网络设置 点击虚拟机右键设置，按照下图设置即可。移除声卡和打印机可以随意。 关闭CentOS-7防火墙 使用firewall-cmd -stat命令查看Linux的防火墙是否关闭。 如果回显如下图，则已经关闭了不需要在进行调整。 如果回显是running则说明防火墙正在运行，需要依次运行下边的命令。12systemctl stop firewalld.service # 关闭防火墙systemctl disable firewalld.service # 禁止开机启动防火墙 设置CentOS-7网关 打开CentOS，使用vim /etc/sysconfig/network命令进行编辑，添加下面的信息。123NETWORKING=yesHOSTNAME=localhost.localdomainGATEWAY=192.168.44.2 #设置成你在虚拟机网络配置查看到的网关 设置CentOS-7静态IP 使用ifconfig命令查看网卡名，如下图我的网卡名为eno16777736。 使用vim /etc/sysconfig/network-scripts/ifcfg-eno16777736命令编辑IP地址要求此IP与VMware的VMnet8子网IP在同一网段，打开后注释或删除原来的ONBOOT和BOOTPROTO。添加下边的参数。 123456ONBOOT=yesBOOTPROTO=staticNETNASK=255.255.255.0 # 子网掩码GATEWAY=192.168.1.1 # 网关DNS1=192.168.1.1 # 可以设置为网关IPADDR=192.168.44.100 #与VMnet8同一网段 更改主机名以及重启网络并检查是否设置正确 使用下边的命令更改主机名 1hostnamectl set-hostname 主机名 # 主机名不能有下划线 使用下边的命令重启网络 1systemctl restart network 使用ping命令检查网络是否设置正常 内网检查 电脑本机ip 192.168.31.219 虚拟机CentOS-7ip 192.168.44.100 外网检查 通过ping www.baidu.com检查是否能连接外网 如果有错误请从新设置 本文作者: Jade版权声明： 未经授权禁止使用，转载请注明出处！]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>vmware</tag>
        <tag>centos-7</tag>
        <tag>static ip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用github搭建博客(四)]]></title>
    <url>%2F2019%2F07%2F19%2F%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A24%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是第三篇介绍通过Hexo博客框架在GitHub上创建个人博客网站的教程，希望能大家有所帮助。这篇博客主要介绍本地编辑软件Sublime的安装和本地Hexo编辑以及Hexo同步到GitHub的教程。 Sublime的安装 Sublime是什么 Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。 Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。 Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。 在这里我们主要是用Sublime来编辑.md文件和.yml格式的文件。 Sublime官方网站 1http://www.sublimetext.com/ 本地博客文章的创建与编辑 文章的创建 在上篇的Blog文件下文门采用hexo init “博客名”(可随意)命令生成了，一个本地的博客文件。进入这个文件中使用鼠标右键打开Git Bash Here后使用下边的命令。 创建博客新文章，使用Sublime打开路径为\博客名\source_posts\文章名.md进行编辑。 1Hexo new &quot;文章名&quot; 如果大家对Hexo命令不太熟悉的话可以点击Hexo命令查看。 本地Hexo同步到GitHub 配置_config.yml文件(只标注了需要更改的项目) 站点配置 12345# Sitetitle: Jade // 网站标题subtitle: Jade // 网站副标题description: Jade // 网站描述author: Jade // 您的名字 URL配置 12# URLurl: http://blogwenbo.com/ // https://+仓库名 Git部署配置 1234deploy:type: git // 类型repo: http://github.com/gclcode/gclcode.github.io.git // 仓库链接地址branch: master // 分支 博客配置文件调试完成，上传测试(按照顺序执行下列命令) 配置用户名和密码 12git config --global user.email &quot;GitHub账号绑定的邮箱地址&quot;git config --global user.name &quot;GitHub账号名&quot; 清理博客缓存 1heox clean 生成静态博客文件 1hexo generate 部署博客到远端,如果出现保持请点击解决办法进行查看,如果没有报错那就是成功了。 1hexo deploy 本文作者: Jade版权声明： 未经授权禁止使用，转载请注明出处！]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用github搭建博客(三)]]></title>
    <url>%2F2019%2F07%2F18%2F%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A23%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是第三篇介绍通过Hexo博客框架在GitHub上创建个人博客网站的教程，希望能大家有所帮助。这篇博客主要介绍本地Hexo框架的安装。 Hexo框架的安装 详细操作可以点击Hexo进行查看。 1https://hexo.io/zh-cn/ 新建Blog(可以自定义名)文件夹后在文件夹中鼠标右键打开Git Bash Here后按照顺序使用下边的命令。 安装Hexo框架 1npm install hexo-cli -g 初始化博客文件 1hexo init &quot;博客名(可随意)&quot; 进入初始化成功的博客文件 1cd &quot;博客名(初始化时的博客文件名)&quot; 安装博客依赖 1npm install 在本地启动你的博客 1hexo server 由于Hexo默认安装的是官方主题，本机4000端口的网页样式应该与下图一样。 温馨提醒 这期是在本地生成了静态的官方博客框架，想要将您的博客同步到远端，请等待下一期更新。 点击本地博客查看本机已经安装好的博客框架。 1http://localhost:4000 如果大家对Hexo命令不太熟悉的话可以点击Hexo命令查看。 本文作者: Jade版权声明： 未经授权禁止使用，转载请注明出处！]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用github搭建博客(二)]]></title>
    <url>%2F2019%2F07%2F17%2F%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A22%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是第二篇介绍通过Hexo博客框架在GitHub上创建个人博客网站的教程，希望能大家有所帮助。这篇博客主要介绍GitHub仓库的创建和GitHub SSH的配置。 GitHub仓库的创建 什么是GitHub仓库 GitHub是一个基于git的代码托管平台,付费用户可以建私人仓库，我们一般的免费用户只能使用公共仓库，也就是代码要公开。 登录GitHub官方网站 1https://github.com/ 登录你已经创建并验证过的账号，点击Repositories后在点击New。 填写仓库信息: 为了方便以后的操作，仓库的链接格式可以按照图片中的格式写。 配置GitHub SSH 为什么要配置SSH: 如果不配置SSH的话，谁都有权限提交代码到你的远程库。 也可以用HTTPS的方式克隆代码，但是每次提交到远程的是时候，需要输入账号密码(不推荐)。 配置好ssh之后，每次提交到远程的是时候就不需要每次都输入账号密码了。 在任意位置鼠标点击右键点击Git Bash Here，执行下面的命令点击三次回车即可，由于我的电脑已经配置过了，下面我们只讲命令和注意事项。 1ssh-keygen -t rsa -C &quot;你GitHub账号的邮箱地址&quot; 继续在Git Bash Here依次输入下面的三个命令： 进入ssh文件目录。 1cd ~/.ssh 查看是否存在id_rsa.pub文件。 1ls 查看并复制id_rsa.pub中key的信息，文件具体信息如下。 1vi id_rsa.pub 打开GitHub官网按照下图片操作 将在id_rsa.pub中复制的信息粘贴到Key中，Title随便写就可以建议写用户名,完成后点击Add SSH Key即可。 本文作者: Jade版权声明： 未经授权禁止使用，转载请注明出处！]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>shh</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用github搭建博客(一)]]></title>
    <url>%2F2019%2F07%2F16%2F%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A21%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是我第一次搭建博客，为了方便身边的小伙伴搭建自己的博客。我打算把博客搭建的流程记录下来，我这个博客是通过github使用hexo博客框架搭建起来的。这篇博客主要介绍Node.js的下载及安装和GitHub账号的注册以及Git For Windows的下载安装。 为什么要安装Node.js和Git For Windows: 我们使用的博客框架是Hexo，Hexo是一个快速、简洁且高效的博客框架。 Hexo框架必须由Node.js和Git For Windows的支持。 安装Hexo博客框架的具体的要求请进入Hexo官方文档了解：1https://hexo.io/zh-cn/docs/index.html 由于Git For Windows的下载速度十分缓慢，我在这里已经准备好了百度网盘的传送门： Git For Windows和Node.js的百度网盘安装包1网盘链接：https://pan.baidu.com/s/1kNqnMaN5q5k70he3I5Ue5Q 提取码：keyi Node.js的下载及安装 Node.js是什么： Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。 Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。 Node.js 的包管理器 npm，是全球最大的开源库生态系统。 V10.16.0版本的Node.js的下载链接： 1https://nodejs.org/dist/v10.16.0/node-v10.16.0-x64.msi Node.js的官方下载网址： 1https://nodejs.org/zh-cn/ Node.js的下载 Node.js的安装和验证 Node.js安装过程和普通的桌面应用程序一样一直点下一步，直到完成。 在cmd命令行窗口中，使用node -v命令查看安装的Node.js的版本，如果你获得下面输出结果，说明你已经成功安装了Node.js。 GitHub账号的注册 GitHub是什么： GitHub是一个基于网站和云的服务，可以帮助开发人员存储和管理他们的代码，以及跟踪和控制对代码的更改。 GitHub同时提供付费账户和免费账户。这两种账户都可以创建公开或私有的代码仓库，但付费用户支持更多功能 GitHub也提供了一些方便社会化共同软件开发的功能，即一般人口中的社群功能，包括允许用户追踪其他用户、组织、软件库的动态，对软件代码的改动和bug提出评论等。 GitHub的官方网址： 1https://github.com/ 注册GitHub： 按照图片上的提示写入用户名，邮箱和密码后，点击Sign up for GitHub完成注册的第一步。 完成图片验证后按照下边的图片选择免费版即可，点击Continue完成注册的第二步。 下边的三个问题随便填写后点击Submit或者直接点击skip this step即可完成GitHub账号的注册。 完成注册后的用户界面如下图所示，这时候的账号还不能立即使用。还需要验证你的邮箱，打开邮箱点击GitHub放给我们的邮件中的链接即可验证邮箱。 Git For Windows的下载及安装 Git是什么： Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目 Git的官方下载地址 1https://git-scm.com/downloads 下载Git,点击红框即可下载Git。 Git的安装和验证 Git安装过程和普通的桌面应用程序一样一直点下一步，直到完成。 在cmd命令行窗口中，使用git –version命令查看安装的Git的版本，如果你获得下面输出结果，说明你已经成功安装了Git。 本文作者: Jade版权声明： 未经授权禁止使用，转载请注明出处！]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Hexo命令的问题]]></title>
    <url>%2F2019%2F07%2F15%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BAHexo-deploy%E5%91%BD%E4%BB%A4%E6%8A%A5%E9%94%99%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在使用Hexo工具来完善我们的博客时，我们有时也会忘记一些基础的命令。这篇博客是我在安装部署Hexo时遇到的问题和解办法，希望对大家有所帮助。 使用Hexo deploy命令出错 第一种出错情况如下 1ERROR Deployer not found: 通常使用该命令解决此问题 1npm install hexo-deployer-git --save 第二种出错情况如下 1ERROR Deployer not found: git 通常使用该命令解决此问题 1npm install hexo-server --save 静态博客Hexo命令流程 生成一个博客日志 1hexo new 文件名 清理博客缓存 1heox clean 生成静态博客文件 1hexo generate 在本地运行博客,默认端口为4000 1hexo server 如果本机的4000端口已经被，可以通过下边的命令使用其他端口 1hexo server -port 未被使用的端口号 部署博客到远端 1hexo deploy 本文作者: Jade版权声明： 未经授权禁止使用，转载请注明出处！]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[帅气小哥哥的专属博客]]></title>
    <url>%2F2019%2F07%2F14%2F%E5%B8%85%E6%B0%94%E5%B0%8F%E5%93%A5%E5%93%A5%E7%9A%84%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一次搭建自己的博客，有许多地方还不太熟悉。希望自己在学习知识的同时能够坚持写博客，提高自己的总结能力，把学习知识的过程中遇到的问题及解决方法和技术感悟总结出来，不仅可以分享给有需要的人也可以为日后遇到的问题提供参考。 本文作者: Jade版权声明： 未经授权禁止使用，转载请注明出处！]]></content>
  </entry>
</search>
